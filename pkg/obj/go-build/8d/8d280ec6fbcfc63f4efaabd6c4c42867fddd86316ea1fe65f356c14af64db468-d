//line /tmp/go-testcover3900884075/linedup/linedup.go:1

package linedup

var G int

func LineDup(c int) {GoCover_0_306430636339643538613432.Count[0]++;
	for i := 0; i < c; i++ {GoCover_0_306430636339643538613432.Count[1]++;
//line ld.go:100
		if i % 2 == 0 {GoCover_0_306430636339643538613432.Count[5]++;
			G++
		}
		GoCover_0_306430636339643538613432.Count[2]++;if i % 3 == 0 {GoCover_0_306430636339643538613432.Count[6]++;
			G++; G++
		}
//line ld.go:100
		GoCover_0_306430636339643538613432.Count[3]++;if i % 4 == 0 {GoCover_0_306430636339643538613432.Count[7]++;
			G++; G++; G++
		}
		GoCover_0_306430636339643538613432.Count[4]++;if i % 5 == 0 {GoCover_0_306430636339643538613432.Count[8]++;
			G++; G++; G++; G++
		}
	}
}

var GoCover_0_306430636339643538613432 = struct {
	Count     [9]uint32
	Pos       [3 * 9]uint32
	NumStmt   [9]uint16
} {
	Pos: [3 * 9]uint32{
		6, 7, 0x190015, // [0]
		7, 100, 0x19, // [1]
		103, 103, 0x0, // [2]
		100, 100, 0x0, // [3]
		103, 103, 0x10000, // [4]
		100, 102, 0x0, // [5]
		103, 105, 0x0, // [6]
		100, 102, 0x10000, // [7]
		103, 105, 0x10000, // [8]
	},
	NumStmt: [9]uint16{
		1, // 0
		1, // 1
		1, // 2
		1, // 3
		1, // 4
		1, // 5
		2, // 6
		3, // 7
		4, // 8
	},
}
