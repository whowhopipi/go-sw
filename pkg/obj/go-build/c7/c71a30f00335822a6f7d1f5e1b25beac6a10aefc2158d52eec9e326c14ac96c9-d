//go:cgo_ldflag "-g"
//go:cgo_ldflag "-O2"
// Code generated by cmd/cgo; DO NOT EDIT.

package main

import "unsafe"

import _ "runtime/cgo"

import "syscall"

var _ syscall.Errno
func _Cgo_ptr(ptr unsafe.Pointer) unsafe.Pointer { return ptr }

//go:linkname _Cgo_always_false runtime.cgoAlwaysFalse
var _Cgo_always_false bool
//go:linkname _Cgo_use runtime.cgoUse
func _Cgo_use(interface{})
type _Ctype_void [0]byte

//go:linkname _cgo_runtime_cgocall runtime.cgocall
func _cgo_runtime_cgocall(unsafe.Pointer, uintptr) int32

//go:linkname _cgoCheckPointer runtime.cgoCheckPointer
func _cgoCheckPointer(interface{}, interface{})

//go:linkname _cgoCheckResult runtime.cgoCheckResult
func _cgoCheckResult(interface{})
//go:linkname __cgo_CollectCgoTraceback CollectCgoTraceback
//go:cgo_import_static CollectCgoTraceback
var __cgo_CollectCgoTraceback byte
var _Cfpvar_fp_CollectCgoTraceback unsafe.Pointer = (unsafe.Pointer)(unsafe.Pointer(&__cgo_CollectCgoTraceback))

//go:cgo_import_static _cgo_c8d47c0ddbd9_Cfunc_CPUHogCFunction
//go:linkname __cgofn__cgo_c8d47c0ddbd9_Cfunc_CPUHogCFunction _cgo_c8d47c0ddbd9_Cfunc_CPUHogCFunction
var __cgofn__cgo_c8d47c0ddbd9_Cfunc_CPUHogCFunction byte
var _cgo_c8d47c0ddbd9_Cfunc_CPUHogCFunction = unsafe.Pointer(&__cgofn__cgo_c8d47c0ddbd9_Cfunc_CPUHogCFunction)

//go:cgo_unsafe_args
func _Cfunc_CPUHogCFunction() (r1 _Ctype_void) {
	_cgo_runtime_cgocall(_cgo_c8d47c0ddbd9_Cfunc_CPUHogCFunction, uintptr(unsafe.Pointer(&r1)))
	if _Cgo_always_false {
	}
	return
}
